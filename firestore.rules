rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === 관리자 설정 ===
    // routefinding2025@gmail.com 계정의 실제 UID로 "YOUR_ADMIN_UID_HERE" 부분을 변경해야 합니다.
    let adminUID = "8rt8bXrViQSXsA9II5Vsbg5uKRQ2"; // <-- 실제 관리자 UID로 변경하세요!

    // 요청하는 사용자가 관리자인지 확인하는 함수
    function isAdmin() {
      return request.auth != null && request.auth.uid == adminUID;
    }

    // 사용자가 인증되었는지 확인하는 헬퍼 함수
    function isAuthenticated() {
        return request.auth != null;
    }
    // ===================


    // === 게시글 컬렉션 규칙 ===
    match /posts/{postId} {
      // 인증된 모든 사용자는 게시글을 읽을 수 있습니다.
      allow read: if isAuthenticated();

      // 인증된 모든 사용자는 게시글을 생성할 수 있습니다 (모든 관리자도 가능).
      allow create: if isAuthenticated();

      // 게시글 수정 및 삭제는 작성자 본인이거나 관리자만 가능합니다.
      allow update, delete: if isAuthenticated() && (request.auth.uid == resource.data.authorId || isAdmin());
    }

    // === 사용자 프로필 컬렉션 규칙 (일반적으로 'users'로 명명) ===
    // 이전 논의에서 Firestore에 'users' 컬렉션을 만들고 사용자 프로필을 저장한다고 가정했습니다.
    // 만약 다른 컬렉션 이름을 사용한다면 아래 'users' 부분을 수정해야 합니다.
    match /users/{userId} {
        // 인증된 모든 사용자는 다른 사용자의 공개 프로필 정보 (photoURL 등)를 읽을 수 있습니다.
        allow read: if isAuthenticated();

        // 사용자 문서 생성/수정은 해당 사용자 본인이거나 관리자만 가능합니다.
        allow create, update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());

        // 사용자 문서 삭제는 관리자만 가능합니다.
        allow delete: if isAdmin();
    }

    // === 댓글 컬렉션 규칙 (게시글 하위 컬렉션) ===
     match /posts/{postId}/comments/{commentId} {
          // 인증된 모든 사용자는 댓글을 읽을 수 있습니다.
          allow read: if isAuthenticated();

          // 인증된 모든 사용자는 댓글을 생성할 수 있습니다.
          allow create: if isAuthenticated();

          // 댓글 수정 및 삭제는 작성자 본인이거나 관리자만 가능합니다.
          allow update, delete: if isAuthenticated() && (request.auth.uid == resource.data.authorId || isAdmin());
     }
  }
}